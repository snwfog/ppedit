// Generated by CoffeeScript 1.6.3
(function() {
  var ppeditDescribe;
<<<<<<< HEAD

  ppeditDescribe = function(suitDescription, specDefinitions) {
    return describe('', function() {
      beforeEach(function() {
        return $(".editor").ppedit();
      });
      afterEach(function() {
        return $('.editor').children().remove();
      });
      return describe(suitDescription, specDefinitions);
    });
  };

  ppeditDescribe("A ppedit Jasmine test template", function() {
    return it("contains spec with an expectation", function() {
      return expect(true).toBe(true);
=======

  ppeditDescribe = function(suitDescription, specDefinitions) {
    return describe('', function() {
      beforeEach(function() {
        return $(".editor").ppedit();
      });
      afterEach(function() {
        return $('.editor').children().remove();
      });
      return describe(suitDescription, specDefinitions);
    });
  };

  ppeditDescribe("A ppedit Jasmine test template", function() {
    return it("contains spec with an expectation", function() {
      return expect(true).toBe(true);
    });
  });

  ppeditDescribe("A test for issue CAP-44 : As a user,  I want options to show or hide the grid, and snap or unsnap my elements in the work area.", function() {
    return it("adds a box on grid button click", function() {
      expect($(".ppedit-grid")).toHaveCss({
        display: "block"
      });
      $(".gridElementBtn").click();
      return expect($(".ppedit-grid")).toHaveCss({
        display: "none"
      });
    });
  });

  ppeditDescribe("A test for issue CAP-24 : As a user, I want to clean my work area, so that I can start on a fresh new page, but I want to be able to remedy in the case of a mistake.", function() {
    return it(" remove boxes when delete element button click", function() {
      $(".removeElementBtn").click();
      return expect($(".editor").find('.ppedit-box')).toHaveLength(0);
>>>>>>> 138799a5e263711d79df2e6e92f7d6463264cf6a
    });
  });

  ppeditDescribe("A test for issue CAP-14 : As a user, I want to reposition elements visible on my work area", function() {
<<<<<<< HEAD
    it("adds a box on add element button click", function() {
      $(".addElementBtn").click();
      return expect($(".editor").find('.ppedit-box')).toHaveLength(1);
    });
    return it("does a box on add element button click", function() {
=======
    return it("adds a box on add element button click", function() {
>>>>>>> 138799a5e263711d79df2e6e92f7d6463264cf6a
      $(".addElementBtn").click();
      return expect($(".editor").find('.ppedit-box')).toHaveLength(1);
    });
  });

}).call(this);
